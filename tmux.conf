# remap prefix to Control + a, like screen
# and also to Control + s, for conflicts
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# act like vim
bind -r k resize-pane -U 5
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r l resize-pane -R 5

setw -g mode-keys vi
set -g status-keys emacs

set -g default-shell $SHELL

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
# Jump back to the prompt after yanking
# bind -T copy-mode-vi "y" send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Escape send -X cancel


# mouse things
set -g mouse on

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# faster response time for escape fixes
# https://github.com/tmux/tmux/issues/131#issuecomment-145853211
# https://github.com/neovim/neovim/issues/8213
set -sg escape-time 10

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g history-limit 10000

# look better
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Titles (window number, program name, active (or not)
set -g set-titles on
set -g set-titles-string '#S.#I.#P #W'

# Pane names
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# open splits vi style
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# other craziness
set -g pane-active-border-style fg=colour50

set -g status-fg colour137
set -g status-bg colour237

setw -g window-status-current-format '#[fg=colour81,bg=colour238] #I#[fg=colour250] #[fg=colour255]#W#[fg=colour81]#F '

# molokai
# setw -g window-status-bg colour23k
# seoul256
setw -g window-status-format '#[fg=colour138,bg=colour237] #I #[fg=colour250]#W#[fg=colour244]#F '

set -g status-interval 5
set -g status-justify left
set -g status-left ''
set -g status-right '#[fg=colour215]#S #[fg=colour249,bg=colour240] %m/%d #[fg=colour240,bg=colour249] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

set -g visual-activity on

set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
run "$HOMEBREW_ROOT/opt/tpm/share/tpm/tpm"
