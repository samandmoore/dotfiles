[alias]
  # View the current working tree status using the short format
  s = status -s
  # `git di $number` shows the diff between the state `$number` revisions ago and the current state
  di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
  # Commit all changes
  ca = !git add -A && git commit -av
  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v
  # instead of blame
  credit = blame
  forkpoint = "!git merge-base --fork-point $1"
  co = checkout
  c = switch -c
  # View the SHA, description, and history graph of the latest 20 commits
  l = "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit -n 20"
  aa = "add -A ."
  # verbose commit
  ci = commit -v
  # Amend last commit
  ac = "!git ci --amend"
  # just cherry pick
  pick = cherry-pick
  # show files with conflicts
  conflicted = diff --name-only --diff-filter=U
  # push and set upstream
  pu = "push -u origin HEAD"
  # open in github web ui
  browse = "!gh browse"
  # open pr view in web ui
  compare = "!gh pr create --web"

[color]
  # Use colors in Git commands that are capable of colored output when outputting to the terminal
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true
[fetch]
  prune = true

# URL shorthands
[url "git@github.com:"]
  ; insteadOf = https://github.com/
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"
[url "git://github.com/"]
  insteadOf = "github:"
[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"
[url "git://gist.github.com/"]
  insteadOf = "gist:"

[push]
  default = simple
[pull]
  ff = only
[user]
  name = Sam Moore
  email = samandmoore@gmail.com
[github]
  user = samandmoore
[rerere]
  enabled = true
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
[init]
  templatedir = ~/.git_template
  defaultBranch = main
[include]
  path = ~/.gitconfig.local
[credential "https://github.com"]
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = !/usr/bin/gh auth git-credential
